name: Create Lane

on:
  pull_request:
    types: [opened]
    branches:    
      - main
  push:
    branches:
      - components/*

jobs:
  setup_npm:

    name: setup npm

    runs-on: ubuntu-latest

    if: startsWith(github.event.pull_request.head.ref, 'components/') || startsWith(github.ref_name, 'components/')

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

  extract_local_lane_name:

    name: extract local lane name

    runs-on: ubuntu-latest

    if: startsWith(github.event.pull_request.head.ref, 'components/') || startsWith(github.ref_name, 'components/')

    outputs: 
      extracted: ${{ steps.extract.outputs.replaced }}

    steps:
      - name: Replace illegal characters from head branch name
        id: extract
        uses: frabert/replace-string-action@v2.0
        with:
          pattern: '/'
          string: ${{ github.event.pull_request.head.ref || github.ref_name }}
          replace-with: '_'
          flags: 'g'

  setup_bit:
    name: setup bit

    runs-on: ubuntu-latest

    needs: [setup_npm, extract_local_lane_name]  

    if: startsWith(github.event.pull_request.head.ref, 'components/') || startsWith(github.ref_name, 'components/')

    env:
      BIT_TOKEN: ${{ secrets.BIT_TOKEN }}

    outputs:
      lane_name: ${{ needs.extract_local_lane_name.outputs.extracted }} 
    
    steps:
      - name: Install Bit Version Manager
        run: npm i -g @teambit/bvm
      - name: Install latest Bit version
        run: bvm install
      - name: add bvm bin folder to path
        run: echo "$HOME/bin" >> $GITHUB_PATH
      - name: Set up bit config
        run: |
          bit config set analytics_reporting false
          bit config set anonymous_reporting false
          bit config set user.token $BIT_TOKEN
      # - name: Import Components
      #   run: bit import
      # - name: Install and Compile all Components
      #   run: bit install && bit compile

  create_lane:
    name: create lane

    runs-on: ubuntu-latest

    needs: [setup_bit]  

    if: startsWith(github.event.pull_request.head.ref, 'components/')

    env:
      LANE_NAME: ${{ needs.setup_bit.outputs.lane_name }}
    
    steps: 
      - uses: actions/checkout@v3
      - name: Create Local Lane
        run: bit lane create $LANE_NAME
  
  update_lane:
    name: create lane

    runs-on: ubuntu-latest

    needs: [setup_bit]  

    if: startsWith(github.ref_name, 'components/')

    env:
      LANE_NAME: ${{ needs.setup_bit.outputs.lane_name }}
      SCOPE_NAME: ${{ secrets.SCOPE_NAME }}
    
    steps: 
      - uses: actions/checkout@v3
      - name: Fetch Remote Lane
        run: bit lane create $LANE_NAME